const express = require('express');
const bodyParser = require('body-parser');
const sequelize = require('./util/database');
const login = require('./routes/login');
const overview= require('./routes/deviceOverview');
const getDashboard = require('./routes/getDashboard');
const getListDasboard = require('./routes/listDashboard');
const deleteDashboard = require('./routes/deleteDashboard');
const updateDashboard= require('./routes/updateDashboard');
const createWidget= require('./routes/createWidget');
const listWidget= require('./routes/listWidget');
const listDevice= require('./routes/listDevices');
const getKey= require('./routes/getKey');
const updateWidget= require('./routes/updateWidget');
const saveWidget=require('./routes/saveWidget');
const deleteWidget= require('./routes/deleteWidget');
const getWidgetById= require('./routes/getWidgetById');
const getdataChart= require('./routes/getdataChart');
const deleteDevice= require('./routes/deleteDevice');
const listParser = require('./routes/listParser');
const updateDevice= require('./routes/updateDevice');
const getAllData= require('./routes/getAllData');
const getcsvAll= require('./routes/getcsvAll');
const listConnector= require('./routes/listConnector');
const createConnector= require('./routes/createConnector');
const deleteConnector = require('./routes/deleteConnector');
const editConnector= require('./routes/editConnector');
const listAlert= require('./routes/listAlert');
const createAlert= require('./routes/createAlert');
const  fs = require('fs');
//const https = require('https');
const https = require('http');
const compression = require('compression');
const createDashboard= require('./routes/createDashboard');
const updateAlert= require ('./routes/updateAlert');
const deleteAlert= require('./routes/deleteAlert');
const setAlert= require('./routes/setAlert');
const saveParser= require('./routes/saveParser');
const deleteParser= require('./routes/deleteParser');
const getScript= require('./routes/getScript');
const testParser= require('./routes/testParser');
const createDownlink= require('./routes/createDownlink');
const listCallback= require('./routes/listCallback');
const createCallback= require('./routes/createCallback');
const deleteCallback=require('./routes/deleteCallback');
const updateCallback= require('./routes/updateCallback');
const listUser= require('./routes/listUser');
const deleteShareDevice= require('./routes/deleteShareDevice');
const createDeviceSharing= require('./routes/createDeviceSharing');
const updateShareDevice= require('./routes/updateShareDevice');
const registerUser= require('./routes/registerUser');
const deleteUser= require('./routes/deleteUser');
const changePassword= require('./routes/changePassword');
const updateParser= require('./routes/updateParser');
const getDateDate= require('./routes/getDateDate');
const getLastData= require('./routes/getLastData');
const getDataToday=require('./routes/getDataToday');
const getDataHour= require('./routes/getDataHour');
const getpko= require('./routes/getpko');

/*const privateKey  = fs.readFileSync('/opt/certificate/iot.key', 'utf8');
const certificate = fs.readFileSync('/opt/certificate/iot.crt', 'utf8');
const cas = fs.readFileSync('/opt/certificate/iot_inter.crt', 'utf8');
const credentials = {key: privateKey, cert: certificate, ca : cas};*/

const app = express();

app.use(bodyParser.json({limit: '100mb'}));
app.use(bodyParser.urlencoded({limit: '100mb', extended: true}));

app.use((req, res, next) => {
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Access-Control-Allow-Methods', 'GET, POST');
    res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');
    next();
});

app.use(login);
app.use(overview);
app.use(getDashboard);
app.use(getListDasboard);
app.use(deleteDashboard);
app.use(updateDashboard);
app.use(createWidget);
app.use(compression());
app.use(createDashboard);
app.use(listWidget);
app.use(listDevice);
app.use(getKey);
app.use(saveWidget);
app.use (updateWidget);
app.use(deleteWidget);
app.use(getWidgetById);
app.use(getdataChart);
app.use(listParser);
app.use(deleteDevice);
app.use(updateDevice);
app.use(getAllData);
app.use(getcsvAll);
app.use(listConnector);
app.use(createConnector);
app.use(deleteConnector);
app.use(editConnector);
app.use(listAlert);
app.use(createAlert);
app.use(updateAlert);
app.use(deleteAlert);
app.use(setAlert);
app.use(saveParser);
app.use(deleteParser);
app.use(getScript);
app.use(testParser);
app.use(createDownlink);
app.use(listCallback);
app.use(createCallback);
app.use(deleteCallback);
app.use(updateCallback);
app.use(listUser);
app.use(deleteShareDevice);
app.use(createDeviceSharing);
app.use(updateShareDevice);
app.use(registerUser);
app.use(deleteUser);
app.use(changePassword);
app.use(updateParser);
app.use(getDateDate);
app.use(getLastData);
app.use(getDataToday);
app.use(getDataHour);
app.use(getpko);
//var httpsServer = https.createServer(credentials,app);
var httpsServer = https.createServer(app);
const port = process.env.port || 7004;
console.log("Server has been started");
httpsServer.listen(port);
